// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
  output   = "./libs/contracts/src/lib/prisma-generated-zod"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id                           String   @id @default(cuid())
  createdAt                    DateTime @default(now())
  updatedAt                    DateTime @updatedAt
  title                        String   @db.VarChar(255)
  content                      String?
  description                  String?
  published                    Boolean  @default(false)
  tags                         String[]
  image                        String?
  importantFieldWithoutDefault String
}

model Project {
  id        String   @unique @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobs      Job[]
}

model Job {
  id String @id @default(cuid())

  userId                 String
  name                   String
  schedule               String // Store cron expression for the job schedule
  waitBeforeScreenshot   Int?
  actionBeforeScreenshot String?
  differenceThreshold    Float?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  url                    String
  runs                   Run[]

  projectId String?
  project   Project? @relation(fields: [projectId], references: [id])
}

model Run {
  id        Int       @id @default(autoincrement())
  jobId     String
  job       Job       @relation(fields: [jobId], references: [id])
  status    String // E.g. "running", "completed", "failed"
  startedAt DateTime
  endedAt   DateTime?
  results   Result[]
}

model Result {
  id            Int      @id @default(autoincrement())
  runId         Int
  run           Run      @relation(fields: [runId], references: [id])
  url           String
  screenshotUrl String
  diffUrl       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
